### 589 N-ary Tree Preorder Traversal
Given the root of an n-ary tree, return the preorder traversal of its nodes' values.
Nary-Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)

Input: root = [1,null,3,2,4,null,5,6]
Output: [1,3,5,6,2,4]

"""
# Definition for a Node.
class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children
"""
### Recursive
class Solution:
    def preorder(self, root: 'Node') -> List[int]:
        self.res = []
        self.dfs(root, self.res)
        return self.res
    def dfs(self, root, res):
        if not root:
            return 
        res.append(root.val)
        for child in root.children:
            self.dfs(child, res)
            
            
## Iterative
Class Solution:
  def preorder(self, root: 'Node') -> List[int]:
    if not root:
      return []
    stack = [root,]
    res = []
    while stack:
      root = stack.pop()
      res.append(root.val)
      stack.append(root.children[::-1])
      #add the children of the temp into the stack in reverse order.
      # children of 1 = [3,2,4], if not reveresed then 4 will be popped out first from the stack.
      # if reversed then stack = [4,2,3]. Here 3 will pop out first.
      # This continues till the stack is empty.
    return res
