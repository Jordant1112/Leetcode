## 110 Balanced Binary Tree
Given a binary tree, determine if it is height-balanced.
For this problem, a height-balanced binary tree is defined as:
a binary tree in which the left and right subtrees of every node differ in height by no more than 1.

Input: root = [3,9,20,null,null,15,7]
Output: true

class Solution:
  def isBalanced(self, root: Optional[TreeNode]) -> bool:
    if not root:
      return True
    if abs(self.height(root.left) - self.height(root.right)) > 1:
      return False
    else:
      return self.isBalanced(root.left) and self.isBalanced(root.right)
  
  
  def height(self, root) -> int:
    if not root:
      return -1
    return 1 + max(self.height(root.left), self.height(root.right))





